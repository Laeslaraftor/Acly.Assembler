namespace Acly.Assembler.Tables
{
    /// <summary>
    /// Перечисление типов шлюзов (gates), используемых в IDT (Interrupt Descriptor Table).
    /// Шлюзы определяют поведение обработки прерываний и исключений.
    /// Значения соответствуют полю "Gate Type" в дескрипторе.
    /// </summary>
    public enum GateType : byte
    {
        /// <summary>
        /// 32-битный шлюз задачи (Task Gate).
        /// При возникновении прерывания или исключения процессор переключается на TSS указанной задачи.
        /// Используется для аппаратного управления многозадачностью.
        /// </summary>
        TaskGate32 = 0x5,
        /// <summary>
        /// 16-битный шлюз прерывания (Interrupt Gate).
        /// Используется для обработки аппаратных и программных прерываний.
        /// При вызове автоматически отключает маскируемые прерывания (IF = 0).
        /// </summary>
        /// <remarks>Устаревший тип для 16-битных систем.</remarks>
        InterruptGate16 = 0x6,
        /// <summary>
        /// 16-битный шлюз ловушки (Trap Gate).
        /// Похож на Interrupt Gate, но не отключает прерывания при входе в обработчик.
        /// </summary>
        /// <remarks>Устаревший тип для 16-битных систем.</remarks>
        TrapGate16 = 0x7,
        /// <summary>
        /// 32-битный шлюз прерывания (Interrupt Gate).
        /// Предпочтительный тип для обработки прерываний в современных системах.
        /// При активации автоматически очищает флаг IF, запрещая дальнейшие прерывания.
        /// </summary>
        InterruptGate32 = 0xE,
        /// <summary>
        /// 32-битный шлюз ловушки (Trap Gate).
        /// Используется для обработки исключений и программных точек останова (например, int 3).
        /// Не очищает флаг IF — прерывания остаются включенными.
        /// </summary>
        /// <remarks>Обычно применяется для отладки и обработки ошибок в ядре.</remarks>
        TrapGate32 = 0xF
    }
}
